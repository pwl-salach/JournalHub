# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- main

pool:
  vmImage: 'macos-latest'

parameters:
  - name: devices
    type: object
    default:
      - "Nexus 4"
      - "Nexus 7"
      - "Nexus 10"

  - name: apis
    type: object
    default:
      - 30

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'
    env:
    JAVA_HOME: $(JAVA_HOME_17_X64)

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/app/build/outputs/apk'
    artifact: 'Apk'
    publishLocation: 'pipeline'

- script: |
    npm install -g appium@2.0.0
    appium driver install uiautomator2
    appium --allow-insecure chromedriver_autodownload &
  displayName: Setup appium

- ${{ each api in parameters.apis }}:
  - script: echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-${{ api }};google_apis;x86_64'
    displayName: Install Android-${{ api }} API

  - script: $ANDROID_HOME/tools/bin/avdmanager list device
    displayName: Show available devices

  - ${{ each device in parameters.devices }}:
    - script: $ANDROID_HOME/tools/bin/avdmanager create avd --name "${{ replace(device, ' ', '_') }}_${{ api }}" --device "${{ device }}" --package 'system-images;android-${{ api }};google_apis;x86_64' --abi x86_64
      displayName: 'Create ${{ device }}_${{ api }} Emulator'

    - script: |
        $ANDROID_HOME/emulator/emulator -avd "${{ replace(device, ' ', '_') }}_${{ api }}" -no-snapshot > /dev/null 2>&1 &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'  
        echo "Emulator started"
      displayName: 'Start ${{ device }}_${{ api }} Emulator'

    - script: |
        $ANDROID_HOME/platform-tools/adb devices
        ./gradlew --rerun-tasks appiumTests:test -Ddevice=emulator-5554 -DdeviceName=${{ replace(device, ' ', '_') }}_${{ api }}
        adb -s emulator-5554 emu kill
        $ANDROID_HOME/platform-tools/adb devices
      env:
        JAVA_HOME: $(JAVA_HOME_17_X64)
      displayName: 'Run Appium tests'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/appiumTests/build/reports/tests/test'
    artifact: 'AppiumResults'
    publishLocation: 'pipeline'
  condition: always()